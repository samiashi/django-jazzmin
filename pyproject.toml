[tool.poetry]
name = "django-jazzmin"
version = "2.6.1"
description = "Drop-in theme for django admin, that utilises AdminLTE 3 & Bootstrap 4 to make yo' admin look jazzy"
license = "MIT"
authors = ["Shipit <packages@shipit.ltd>"]
maintainers = ["Shipit <packages@shipit.ltd>"]
readme = "README.md"
homepage = "https://github.com/farridav/django-jazzmin"
repository = "https://github.com/farridav/django-jazzmin"
documentation = "https://django-jazzmin.readthedocs.io"
keywords = ["django", "dashboard", "theme", "admin", "jazzmin"]
classifiers = [
    "Environment :: Web Environment",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Internet :: WWW/HTTP :: WSGI",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{ include = "jazzmin" }]
include = ["jazzmin"]
exclude = ["tests", "docs"]

[tool.poetry.dependencies]
python = ">=3.8"
django = ">=4.2"

[tool.poetry.group.dev.dependencies]
django-debug-toolbar = "^3.2.4" # unparallelled debugging in django
Werkzeug = "^2.0.2"             # support for werkzeug debugger in runserver_plus
django-extensions = "^3.1.5"    # Django Sugar for development
pytest = "^6.2.5"               # Test runner
pytest-django = "^4.5.2"        # Django integration for pytest
pytest-cov = "^4.1.0"           # Measure code coverage during tests
tox = "^3.24.5"                 # Test runner for python packages
Faker = "^11.3.0"               # less fake fake data
coveralls = "^3.3.1"            # Publish code coverage to coveralls
beautifulsoup4 = "^4.10.0"      # Structure HTML documents into navigable things for test assertions
mkdocs = "^1.2.3"               # Tool for serving rendered markdown docs
polib = "^1.1.1"                # Tool for dealing with translation files
factory-boy = "^3.2.1"          # Factory generation
mypy = "^0.931"                 # Type checking
click = "^8.0.3"                # Framework for building cli's
ipdb = "^0.13.9"                # ipython breakpoints
ruff = "*"                      # linter and code formatter
django-stubs = "*"              # Stubs for django

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/farridav/django-jazzmin/issues"
"All Releases" = "https://github.com/farridav/django-jazzmin/releases"
"Latest Release" = "https://github.com/farridav/django-jazzmin/releases/latest"
"Source" = "https://github.com/farridav/django-jazzmin"

[tool.pytest.ini_options]
addopts = "--pdbcls=IPython.terminal.debugger:TerminalPdb -p no:warnings --cov=jazzmin"
junit_family = "xunit2"
norecursedirs = ".git .tox _resource .mypy_cache build dist docs"
DJANGO_SETTINGS_MODULE = "tests.test_app.library.settings"
FAIL_INVALID_TEMPLATE_VARS = 1

[tool.ruff]
target-version = "py38"
line-length = 120

[tool.ruff.lint]
select = [
    "E",    # PEP8 errors
    "W",    # PEP8 warnings
    "F",    # PyFlakes
    "I",    # isort
    "C",    # mccabe
    "T201", # flake8-print
]
ignore = [
    "E501", # line too long
]

[tool.ruff.lint.isort]
known-first-party = ["jazzmin"]
known-local-folder = ["tests"]

[tool.ruff.lint.mccabe]
max-complexity = 12

[tool.coverage.run]
omit = ["*/__init__.py", ".tox", ".mypy_cache", ".reports", ".git"]

[tool.coverage.report]
omit = ["*/__init__.py", ".tox", ".mypy_cache", ".reports", ".git"]
show_missing = true

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
